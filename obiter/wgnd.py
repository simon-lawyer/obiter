# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_wgnd.ipynb.

# %% auto 0
__all__ = ['wgnd']

# %% ../nbs/01_wgnd.ipynb 3
import pandas as pd
import requests
from io import StringIO

# %% ../nbs/01_wgnd.ipynb 4
# this class downloads data from the WGND2.0 cite
# It includes a function to parse the data downloaded
class wgnd:
    def __init__(self):
        print('Downloading data from WGND2.0')
        print('WGND 2.0 name-gender (_i.e._ No code) contains 3,491,141 unique name observations. \nThis file is based on WGND 2.0 name-gender-code but it omits all known conflicting names across sources, geography and gender.')
        print('\nRead about the project here: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/MSEGSJ')
        print('\nDataset citation: Raffo, Julio, 2021, "WGND 2.0", https://doi.org/10.7910/DVN/MSEGSJ, Harvard Dataverse, V1, UNF:6:5rI3h1mXzd6zkVhHurelLw== [fileUNF]')
        self.url = 'https://dataverse.harvard.edu/api/access/datafile/4750351'
        s = requests.get(self.url).content
        self.names = pd.read_csv(StringIO(s.decode('utf-8')), sep='\t')
        print('Data downloaded')
    
    def get_gender(self,name):
        #lookup a name in the datase (name column) and get the gender from the gender column
        #if the name is not found, return 'unknown'

        matches = self.names[self.names['name'] == name.lower()]
        if len(matches) == 0:
            return 'unknown'
        return matches.iloc[0]["gender"]
